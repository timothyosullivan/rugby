Metadata:
  License: Apache-2.0
AWSTemplateFormatVersion: '2010-09-09'
Description: 'This AWS CloudFormation Template will launch an Amazon EC2 instance of type t2.micro with latest Amazon Linux 2 OS, and
install the RugbyStats webserver. 
The template will also create an Amazon RDS PostgreSQL database instance in free tier, i.e. of type db.t2.micro and with no Multi-AZ setup or
read replicas. 
The WebAppSecurityGroup will allow only SSH and HTTP connections to this web server EC2 instance, and the DBEC2SecurityGroup will
only allow the WebAppSecurityGroup to initiate database connections to the RDS PostgreSQL DB instance over TCP port 5432. The default VPC will be used.'

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  VPC:
    Description: Choose VPC
    Type: AWS::EC2::VPC::Id
  SubnetID:
    Description: Choose Subnet
    Type: AWS::EC2::Subnet::Id
  LatestAmiId:
    Type : AWS::SSM::Parameter::Value<String>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-ebs
  S3BucketName:
    Type: String
    Description: The name of the S3 bucket holding the rugby web app deployment - must be unique across all of AWS (3-63 lowercase letters or numbers)
    Default: bucket-storing-deployment-jar
    AllowedPattern: '^[a-z0-9-]{5,40}$'
    ConstraintDescription: 3-63 characters; must contain only lowercase letters or numbers
  DBInstanceIdentifier:
    Type: String
    Default: "rugby-app-db"
    Description: RDS DB instance
    Type: String
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9-]*'
    ConstraintDescription: Must begin with a letter and must not end with a hyphen or contain two consecutive hyphens.
  DBUsername:
    NoEcho: "true"
    Description: Username for Postgresql database access
    Type: String
    MinLength: "1"
    MaxLength: "16"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
    Default: "postgres"
  DBPassword:
    NoEcho: "true"
    Description: Password Postgresql database access
    Type: String
    MinLength: "8"
    MaxLength: "41"
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: Must contain only alphanumeric characters and be a minimum of 8 characters.
#  DatabaseName:
#    Default: mydb
#    Description: Database name
#    Type: String
#    MinLength: '1'
#    MaxLength: '64'
#    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
#    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref RootInstanceProfile
      ImageId: !Ref LatestAmiId
      Tags:
        - Key: Name
          Value: "RugbyStatsWebserver"
      SecurityGroups: 
        - !Ref WebAppSecurityGroup
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            aws s3 cp s3://${S3BucketName}/rugby-app-1.0-SNAPSHOT.jar /home/ec2-user/rugby-app-deployment-1.0-SNAPSHOT.jar
            sudo yum -y install java-17
            cd /home/ec2-user/
            sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080
            java -jar rugby-app-deployment-1.0-SNAPSHOT.jar > rugby-app-deployment.log
  WebAppElasticIP:
    Type: AWS::EC2::EIP
  IPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
     InstanceId: !Ref EC2Instance
     EIP: !Ref WebAppElasticIP

  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP connections to EC2 instance
      Tags:
        - Key: Name
          Value: WebAppSecurityGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  RootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles: 
        - !Ref RootRole

  RootRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
          Version : '2012-10-17'
          Statement:
              Effect: Allow
              Principal:
                Service: ec2.amazonaws.com
              Action: 
                - 'sts:AssumeRole'

  ReadS3BucketPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ReadS3BucketPolicy
      PolicyDocument:
        Statement:
            Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
            Resource: !Sub "arn:aws:s3:::${S3BucketName}/*"
      Roles: 
        - !Ref RootRole

  WebAppDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      VPCSecurityGroups:
        - !GetAtt DBEC2SecurityGroup.GroupId
      AllocatedStorage: "5"
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      Tags:
        - Key: Name
          Value: rugby-webapp-rds
#     DeletionPolicy: Snapshot
#     UpdateReplacePolicy: Snapshot

  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: rugby-webapp-db-security-group
      GroupDescription: Allow postgres inbound traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupName:
            Ref: WebAppSecurityGroup
      Tags:
        - Key: Name
          Value: rugby-webapp-db-security-group

Outputs:
  WebsiteURL:
      Value: !Sub http://${WebAppElasticIP}
      Description: Webserver URL
  WebServerPublicDNS:
    Description: "Public DNS of EC2 instance"
    Value: !GetAtt EC2Instance.PublicDnsName
  WebAppDatabaseEndpoint:
    Description: "Connection endpoint for the database"
    Value: !GetAtt WebAppDatabase.Endpoint.Address